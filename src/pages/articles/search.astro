---
import MainLayout from "../../layouts/MainLayout.astro";
import SearchForm from "../../components/ui/SearchForm.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

// Retrieve all blog articles at build time
const allBlogArticles: CollectionEntry<'blog'>[] = await getCollection('blog');

// Map article data into a simplified array for client-side search
const articlesData = allBlogArticles.map(article => ({
  title: article.data.title,
  // Construct URL â€“ adjust the path as needed for your site structure
  url: article.slug ? `/articles/${article.slug}/` : "/articles",
  description: article.data.description || ""
}));
---
<MainLayout title="Search Results">
  <main class="space-y-20">
    <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
      <a href="/articles" class="inline-flex items-center font-medium text-black hover:text-green my-4">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-6 w-6">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"></path>
        </svg>
        <span class="ml-1 font-bold text-lg">All Articles</span>
      </a>

      <br>
      <!-- Optionally include your SearchForm component -->
      <SearchForm />
      <br>
      <!-- New search input for client-side filtering -->
      <input
        type="text"
        id="searchInput"
        placeholder="Search articles..."
        class="p-2 border border-gray-300 w-full max-w-md"
      />

      <!-- Container for search results -->
      <ul id="resultsList" class="grid gap-8 lg:grid-cols-2">
        {articlesData.map(article => (
          <li class="result-item" data-title={article.title.toLowerCase()}>
            <a href={article.url} class="text-lg font-bold text-black hover:text-green">
              {article.title}
            </a>
            {article.description && <p>{article.description}</p>}
          </li>
        ))}
      </ul>
      <p id="noResults" class="hidden text-xl mt-4">No matching articles found.</p>
    </div>
  </main>

  <!-- Client-side search script -->
  <script>
    (function() {
      const searchInput = document.getElementById('searchInput');
      const resultsList = document.getElementById('resultsList');
      const noResults = document.getElementById('noResults');
      const resultItems = Array.from(document.getElementsByClassName('result-item'));

      function filterResults(query) {
        const term = query.trim().toLowerCase();
        let visibleCount = 0;
        resultItems.forEach(item => {
          const title = item.getAttribute('data-title');
          // If the query is empty or the title includes the search term, show the item
          if (!term || title.includes(term)) {
            item.style.display = "block";
            visibleCount++;
          } else {
            item.style.display = "none";
          }
        });
        // Show the "no results" message if no items are visible
        noResults.classList.toggle("hidden", visibleCount > 0);
      }

      // Listen for user input to filter results dynamically
      searchInput.addEventListener('input', (e) => {
        filterResults(e.target.value);
      });

      // On page load, check for a query parameter in the URL and apply it
      const params = new URLSearchParams(window.location.search);
      const initialQuery = params.get('query');
      if (initialQuery) {
        searchInput.value = initialQuery;
        filterResults(initialQuery);
      }
    })();
  </script>
</MainLayout>
